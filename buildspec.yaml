version: 0.2

phases:
  pre_build:
    commands:
      # Preparation steps before building or testing
      - echo "Preparing for tests..."
      # Debugging commands to check the current directory and its contents
      - pwd  # Print current working directory to verify path
      - ls -l # List files in the current directory for debugging
      # Conditional execution: Check if the updated_outputs.env file exists for importing environment variables
      - |
        if [ -f ./updated_outputs.env ]; then
          cat ./updated_outputs.env  # Debug: view file content
          source ./updated_outputs.env
          echo "Imported API URL: $REACT_APP_API_BASE_URL"
        else
          echo "updated_outputs.env does not exist, skipping..."
        fi
  build:
    commands:
    # testing the API of the application
      - |
        echo "Running API tests..."
        if [ ! -z "$REACT_APP_API_BASE_URL" ]; then
          # Adding a new note
          curl -X POST "${REACT_APP_API_BASE_URL}/notes" -H "Content-Type: application/json" -d '{"noteId": "sampleNoteId", "content": "This is a sample note content."}'
          # Adding another note
          curl -X POST "${REACT_APP_API_BASE_URL}/notes" -H "Content-Type: application/json" -d '{"noteId": "2", "content": "This is a test note"}'
          # Getting a note by ID
          curl "${REACT_APP_API_BASE_URL}/notes/2"
          # Generating a pre-signed URL for file upload
          curl -X POST "${REACT_APP_API_BASE_URL}/generate-presigned-url/upload" -H "Content-Type: application/json" -d '{"file_name": "testNumber2.txt"}'
        else
          echo "REACT_APP_API_BASE_URL is not set. Skipping API tests."
        fi
  post_build:
    commands:
      # Concluding message indicating the end of tests
      - echo "API testing completed on `date`"  # Use backticks to execute the `date` command and print the current date and time
